---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: databases.database.dbhero.io
spec:
  group: database.dbhero.io
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the databases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSpec defines the desired state of Database
            properties:
              DBType:
                default: mysql
                enum:
                - mysql
                - postgresql
                type: string
              DBVersion:
                default: 5.7
                enum:
                - 5.7
                - 8
                type: string
              auth:
                description: Auth defines the necessary conditions for connecting
                  to the database
                properties:
                  password:
                    description: Password is the database access password
                    properties:
                      value:
                        type: string
                      valueFrom:
                        properties:
                          secretKeyRef:
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        type: object
                    type: object
                  username:
                    description: Username is to access the database
                    properties:
                      value:
                        type: string
                      valueFrom:
                        properties:
                          secretKeyRef:
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        type: object
                    type: object
                required:
                - password
                type: object
              dbName:
                maxLength: 16
                minLength: 6
                type: string
              defaultCharacterSet:
                enum:
                - utf8mb4
                - latin1
                type: string
              defaultCollation:
                enum:
                - utf8mb4_general_ci
                - latin1_general_cs
                type: string
            type: object
          status:
            description: DatabaseStatus defines the observed state of Database
            properties:
              access:
                description: AccessAddress defines 3 available connection address.
                  1) PrivateAddr is the inner network address, such as a `Service
                  Name`. 2) PublicAddr is the outside network address, such as a Public
                  IP addr.
                properties:
                  privateAddr:
                    description: PrivateAddr is the inner network access address
                    type: string
                  publicAddr:
                    description: PublicAddr is the outside network access address
                    type: string
                type: object
              auth:
                description: Auth defines the necessary conditions for connecting
                  to the database
                properties:
                  password:
                    description: Password is the database access password
                    properties:
                      value:
                        type: string
                      valueFrom:
                        properties:
                          secretKeyRef:
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        type: object
                    type: object
                  username:
                    description: Username is to access the database
                    properties:
                      value:
                        type: string
                      valueFrom:
                        properties:
                          secretKeyRef:
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        type: object
                    type: object
                required:
                - password
                type: object
              dbName:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
